// <auto-generated />
using System;
using BlogSite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogSite.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20180703134526_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlogSite.Data.tblArticle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID");

                    b.Property<string>("ArticleContent");

                    b.Property<int>("CoverImageID");

                    b.Property<int>("Likes");

                    b.Property<DateTime>("PublishDate");

                    b.Property<Guid>("PublisherID");

                    b.Property<string>("Summary");

                    b.Property<string>("Title");

                    b.Property<int>("Views");

                    b.Property<bool>("isActive");

                    b.HasKey("ID");

                    b.ToTable("tblArticle");
                });

            modelBuilder.Entity("BlogSite.Data.tblArticleImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleID");

                    b.Property<int>("ImageID");

                    b.HasKey("ID");

                    b.HasIndex("ArticleID");

                    b.HasIndex("ImageID");

                    b.ToTable("tblArticleImage");
                });

            modelBuilder.Entity("BlogSite.Data.tblArticleTag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleID");

                    b.Property<int>("TagID");

                    b.HasKey("ID");

                    b.HasIndex("ArticleID");

                    b.HasIndex("TagID");

                    b.ToTable("tblArticleTag");
                });

            modelBuilder.Entity("BlogSite.Data.tblAuthor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ImageID");

                    b.Property<string>("MailAdress");

                    b.Property<string>("Name");

                    b.Property<string>("Nickname");

                    b.Property<DateTime>("RegistrationDate");

                    b.Property<string>("Surname");

                    b.Property<bool>("isActive");

                    b.Property<int?>("tblMediaID");

                    b.HasKey("ID");

                    b.HasIndex("tblMediaID");

                    b.ToTable("tblAuthor");
                });

            modelBuilder.Entity("BlogSite.Data.tblCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("tblCategory");
                });

            modelBuilder.Entity("BlogSite.Data.tblComment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleID");

                    b.Property<string>("CommentContent");

                    b.Property<DateTime>("SubmitDate");

                    b.Property<string>("Title");

                    b.Property<bool>("isActive");

                    b.Property<int?>("tblArticleID");

                    b.HasKey("ID");

                    b.HasIndex("tblArticleID");

                    b.ToTable("tblComment");
                });

            modelBuilder.Entity("BlogSite.Data.tblMedia", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LargePath");

                    b.Property<string>("MediumPath");

                    b.Property<string>("Name");

                    b.Property<string>("SmallPath");

                    b.Property<DateTime>("UploadDate");

                    b.Property<string>("VideoPath");

                    b.HasKey("ID");

                    b.ToTable("tblMedia");
                });

            modelBuilder.Entity("BlogSite.Data.tblTag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("tblTag");
                });

            modelBuilder.Entity("BlogSite.Data.tblVisitor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IPAdress");

                    b.Property<DateTime>("VisitDate");

                    b.HasKey("ID");

                    b.ToTable("tblVisitor");
                });

            modelBuilder.Entity("BlogSite.Data.tblArticleImage", b =>
                {
                    b.HasOne("BlogSite.Data.tblArticle", "Article")
                        .WithMany("tblArticleImage")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlogSite.Data.tblMedia", "Image")
                        .WithMany()
                        .HasForeignKey("ImageID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlogSite.Data.tblArticleTag", b =>
                {
                    b.HasOne("BlogSite.Data.tblArticle", "Article")
                        .WithMany("tblArticleTag")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlogSite.Data.tblTag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlogSite.Data.tblAuthor", b =>
                {
                    b.HasOne("BlogSite.Data.tblMedia", "tblMedia")
                        .WithMany()
                        .HasForeignKey("tblMediaID");
                });

            modelBuilder.Entity("BlogSite.Data.tblComment", b =>
                {
                    b.HasOne("BlogSite.Data.tblArticle", "tblArticle")
                        .WithMany()
                        .HasForeignKey("tblArticleID");
                });
#pragma warning restore 612, 618
        }
    }
}
